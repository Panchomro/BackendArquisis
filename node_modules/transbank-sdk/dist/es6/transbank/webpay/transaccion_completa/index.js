import Options from '../../common/options';
import Environment from '../common/environment';
import _Transaction from './transaction';
import _MallTransaction from './mall_transaction';
import IntegrationCommerceCodes from '../../common/integration_commerce_codes';
import IntegrationApiKeys from '../../common/integration_api_keys';
var TransaccionCompleta;
(function (TransaccionCompleta) {
    /**
     * Contains methods used to create, commit, refund and capture Transactions.
     */
    TransaccionCompleta.Transaction = _Transaction;
    /**
     * Contains methods used to create, commit, refund and capture Mall Transactions.
     */
    TransaccionCompleta.MallTransaction = _MallTransaction;
    /**
       * @returns currently configured Commerce Code and Api Key
       */
    TransaccionCompleta.getDefaultOptions = () => {
        return TransaccionCompleta.options;
    };
    /**
     * This methods configures the module to point to the Production Environment with the given params.
     * @param _commerceCode Commerce Code given by Transbank when contracting the product
     * @param _apiKey Api Key given by Transbank when you sucessfuly validate your integration
     */
    TransaccionCompleta.configureForProduction = (_commerceCode, _apiKey) => {
        TransaccionCompleta.options = new Options(_commerceCode, _apiKey, Environment.Production);
    };
    /**
     * This methods configures the module to point to the Integration Environment with the given params.
     * You can check use the credentials provided in the official docs.
     * https://transbankdevelopers.cl/documentacion/como_empezar#codigos-de-comercio
     * @param _commerceCode Commerce Code given by Transbank.
     * @param _apiKey Api Key given by Transbank.
     */
    TransaccionCompleta.configureForIntegration = (_commerceCode, _apiKey) => {
        TransaccionCompleta.options = new Options(_commerceCode, _apiKey, Environment.Integration);
    };
    /**
     * This method configures the module to use Transaccion Completa in the Integration environment.
     */
    TransaccionCompleta.configureForTesting = () => {
        TransaccionCompleta.options = new Options(IntegrationCommerceCodes.TRANSACCION_COMPLETA, IntegrationApiKeys.WEBPAY, Environment.Integration);
    };
    /**
     * This method configures the module to use Transaccion Completa Deferred in the Integration environment.
     */
    TransaccionCompleta.configureForTestingDeferred = () => {
        TransaccionCompleta.options = new Options(IntegrationCommerceCodes.TRANSACCION_COMPLETA_DEFERRED, IntegrationApiKeys.WEBPAY, Environment.Integration);
    };
    /**
     * This method configures the module to use Transaccion Completa Mall in the Integration environment.
     */
    TransaccionCompleta.configureForTestingMall = () => {
        TransaccionCompleta.options = new Options(IntegrationCommerceCodes.TRANSACCION_COMPLETA_MALL, IntegrationApiKeys.WEBPAY, Environment.Integration);
    };
    /**
     * This method configures the module to use Transaccion Completa Mall Deferred in the Integration environment.
     */
    TransaccionCompleta.configureForTestingMallDeferred = () => {
        TransaccionCompleta.options = new Options(IntegrationCommerceCodes.TRANSACCION_COMPLETA_MALL_DEFERRED, IntegrationApiKeys.WEBPAY, Environment.Integration);
    };
    /**
     * This method configures the module to use Transaccion Completa without CVV in the Integration environment.
     */
    TransaccionCompleta.configureForTestingNoCVV = () => {
        TransaccionCompleta.options = new Options(IntegrationCommerceCodes.TRANSACCION_COMPLETA_SIN_CVV, IntegrationApiKeys.WEBPAY, Environment.Integration);
    };
    /**
     * This method configures the module to use Transaccion Completa Deferred without CVV in the Integration environment.
     */
    TransaccionCompleta.configureForTestingDeferredNoCVV = () => {
        TransaccionCompleta.options = new Options(IntegrationCommerceCodes.TRANSACCION_COMPLETA_DEFERRED_SIN_CVV, IntegrationApiKeys.WEBPAY, Environment.Integration);
    };
    /**
     * This method configures the module to use Transaccion Completa Mall without CVV in the Integration environment.
     */
    TransaccionCompleta.configureForTestingMallNoCVV = () => {
        TransaccionCompleta.options = new Options(IntegrationCommerceCodes.TRANSACCION_COMPLETA_MALL_SIN_CVV, IntegrationApiKeys.WEBPAY, Environment.Integration);
    };
    /**
     * This method configures the module to use Transaccion Completa Mall Deferred without CVV in the Integration environment.
     */
    TransaccionCompleta.configureForTestingMallDeferredNoCVV = () => {
        TransaccionCompleta.options = new Options(IntegrationCommerceCodes.TRANSACCION_COMPLETA_MALL_DEFERRED_SIN_CVV, IntegrationApiKeys.WEBPAY, Environment.Integration);
    };
})(TransaccionCompleta || (TransaccionCompleta = {}));
export default TransaccionCompleta;
