"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var options_1 = __importDefault(require("../common/options"));
var environment_1 = __importDefault(require("./common/environment"));
var inscription_1 = __importDefault(require("./inscription"));
var integration_api_keys_1 = __importDefault(require("../common/integration_api_keys"));
var integration_commerce_codes_1 = __importDefault(require("../common/integration_commerce_codes"));
var PatpassComercio;
(function (PatpassComercio) {
    /**
     * Contains methods used to start and status Inscriptions.
     */
    PatpassComercio.Inscription = inscription_1.default;
    /**
     * @returns currently configured Commerce Code and Api Key
     */
    PatpassComercio.getDefaultOptions = function () {
        return PatpassComercio.options;
    };
    /**
     * This methods configures the module to point to the Production Environment with the given params.
     * @param _commerceCode Commerce Code given by Transbank when contracting the product
     * @param _apiKey Api Key given by Transbank when you sucessfuly validate your integration
     */
    PatpassComercio.configureForProduction = function (_commerceCode, _apiKey) {
        PatpassComercio.options = new options_1.default(_commerceCode, _apiKey, environment_1.default.Production);
    };
    /**
     * This methods configures the module to point to the Integration Environment with the given params.
     * You can check use the credentials provided in the official docs.
     * https://transbankdevelopers.cl/documentacion/como_empezar#codigos-de-comercio
     * @param _commerceCode Commerce Code given by Transbank.
     * @param _apiKey Api Key given by Transbank.
     */
    PatpassComercio.configureForIntegration = function (_commerceCode, _apiKey) {
        PatpassComercio.options = new options_1.default(_commerceCode, _apiKey, environment_1.default.Integration);
    };
    /**
     * This method configures the module to use Patpass Comercio in the Integration environment.
     */
    PatpassComercio.configureForTesting = function () {
        PatpassComercio.options = new options_1.default(integration_commerce_codes_1.default.PATPASS_COMERCIO, integration_api_keys_1.default.PATPASS_COMERCIO, environment_1.default.Integration);
    };
})(PatpassComercio || (PatpassComercio = {}));
exports.default = PatpassComercio;
