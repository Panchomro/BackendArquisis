"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var options_1 = __importDefault(require("../../common/options"));
var _1 = __importDefault(require("./"));
var base_transaction_1 = __importDefault(require("../../common/base_transaction"));
var requests_1 = require("./requests");
var request_service_1 = __importDefault(require("../../common/request_service"));
var integration_commerce_codes_1 = __importDefault(require("../../common/integration_commerce_codes"));
var integration_api_keys_1 = __importDefault(require("../../common/integration_api_keys"));
var environment_1 = __importDefault(require("../common/environment"));
var validation_util_1 = __importDefault(require("../../common/validation_util"));
var api_constants_1 = __importDefault(require("../../common/api_constants"));
/**
 * Contains methods to interact with WebpayPlus API
 */
var Transaction = /** @class */ (function (_super) {
    __extends(Transaction, _super);
    /**
     * Constructor class Webpay Plus transaction.
     * @param options (Optional) You can pass options to use a custom configuration.
     */
    function Transaction(options) {
        options = options || _1.default.getDefaultOptions() || new options_1.default(integration_commerce_codes_1.default.WEBPAY_PLUS, integration_api_keys_1.default.WEBPAY, environment_1.default.Integration);
        return _super.call(this, options) || this;
    }
    /**
     * Create a Webpay Plus transaction.
     * @param buyOrder Commerce buy order, make sure this is unique.
     * @param sessionId You can use this field to pass session data if needed.
     * @param amount Transaction amount
     * @param returnUrl URL to which Transbank will redirect after card holder pays
     */
    Transaction.prototype.create = function (buyOrder, sessionId, amount, returnUrl) {
        return __awaiter(this, void 0, void 0, function () {
            var createRequest;
            return __generator(this, function (_a) {
                validation_util_1.default.hasTextWithMaxLength(buyOrder, api_constants_1.default.BUY_ORDER_LENGTH, "buyOrder");
                validation_util_1.default.hasTextWithMaxLength(sessionId, api_constants_1.default.SESSION_ID_LENGTH, "sessionId");
                validation_util_1.default.hasTextWithMaxLength(returnUrl, api_constants_1.default.RETURN_URL_LENGTH, "returnUrl");
                createRequest = new requests_1.CreateRequest(buyOrder, sessionId, amount, returnUrl);
                return [2 /*return*/, request_service_1.default.perform(createRequest, this.options)];
            });
        });
    };
    /**
     * Commit a transaction, this should be invoked after the card holder pays
     * @param token Unique transaction identifier
     */
    Transaction.prototype.commit = function (token) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                validation_util_1.default.hasTextWithMaxLength(token, api_constants_1.default.TOKEN_LENGTH, "token");
                return [2 /*return*/, request_service_1.default.perform(new requests_1.CommitRequest(token), this.options)];
            });
        });
    };
    /**
     * Obtain the status of a specific transaction
     * @param token Unique transaction identifier
     */
    Transaction.prototype.status = function (token) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                validation_util_1.default.hasTextWithMaxLength(token, api_constants_1.default.TOKEN_LENGTH, "token");
                return [2 /*return*/, request_service_1.default.perform(new requests_1.StatusRequest(token), this.options)];
            });
        });
    };
    /**
     * Request a refund of a specific transaction, if you refund for the full amount and you're within
     * the time window the transaction will be reversed. If you're past that window or refund for less
     * than the total amount the transaction will be void.
     * @param token Unique transaction identifier
     * @param amount Amount to be refunded
     */
    Transaction.prototype.refund = function (token, amount) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                validation_util_1.default.hasTextWithMaxLength(token, api_constants_1.default.TOKEN_LENGTH, "token");
                return [2 /*return*/, request_service_1.default.perform(new requests_1.RefundRequest(token, amount), this.options)];
            });
        });
    };
    /** Capture a deferred transaction.
     *
     * Your commerce code must be configured to support deferred capture.
     *
     * @param token Unique transaction identifier
     * @param buyOrder Transaction's buy order
     * @param authorizationCode Transaction's authorization code
     * @param captureAmount Amount to be captured
     */
    Transaction.prototype.capture = function (token, buyOrder, authorizationCode, captureAmount) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                validation_util_1.default.hasTextWithMaxLength(token, api_constants_1.default.TOKEN_LENGTH, "token");
                validation_util_1.default.hasTextWithMaxLength(buyOrder, api_constants_1.default.BUY_ORDER_LENGTH, "buyOrder");
                validation_util_1.default.hasTextWithMaxLength(authorizationCode, api_constants_1.default.AUTHORIZATION_CODE_LENGTH, "authorizationCode");
                return [2 /*return*/, request_service_1.default.perform(new requests_1.CaptureRequest(token, buyOrder, authorizationCode, captureAmount), this.options)];
            });
        });
    };
    return Transaction;
}(base_transaction_1.default));
exports.default = Transaction;
