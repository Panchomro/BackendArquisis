"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var integration_api_keys_1 = __importDefault(require("../../common/integration_api_keys"));
var integration_commerce_codes_1 = __importDefault(require("../../common/integration_commerce_codes"));
var environment_1 = __importDefault(require("../common/environment"));
var options_1 = __importDefault(require("../../common/options"));
var transaction_1 = __importDefault(require("./transaction"));
var WebpayPlusModal;
(function (WebpayPlusModal) {
    /**
     * Contains methods used to create, commit, refund and capture Transactions.
     */
    WebpayPlusModal.Transaction = transaction_1.default;
    /**
     * @returns currently configured Commerce Code and Api Key
     */
    WebpayPlusModal.getDefaultOptions = function () {
        return WebpayPlusModal.options;
    };
    /**
     * This methods configures the module to point to the Production Environment with the given params.
     * @param _commerceCode Commerce Code given by Transbank when contracting the product
     * @param _apiKey Api Key given by Transbank when you sucessfuly validate your integration
     */
    WebpayPlusModal.configureForProduction = function (_commerceCode, _apiKey) {
        WebpayPlusModal.options = new options_1.default(_commerceCode, _apiKey, environment_1.default.Production);
    };
    /**
     * This methods configures the module to point to the Integration Environment with the given params.
     * You can check use the credentials provided in the official docs.
     * https://transbankdevelopers.cl/documentacion/como_empezar#codigos-de-comercio
     * @param _commerceCode Commerce Code given by Transbank.
     * @param _apiKey Api Key given by Transbank.
     */
    WebpayPlusModal.configureForIntegration = function (_commerceCode, _apiKey) {
        WebpayPlusModal.options = new options_1.default(_commerceCode, _apiKey, environment_1.default.Integration);
    };
    /**
     * This method configures the module to use Webpay Plus in the Integration environment.
     */
    WebpayPlusModal.configureWebpayPlusForTesting = function () {
        WebpayPlusModal.options = new options_1.default(integration_commerce_codes_1.default.WEBPAY_PLUS_MODAL, integration_api_keys_1.default.WEBPAY, environment_1.default.Integration);
    };
})(WebpayPlusModal || (WebpayPlusModal = {}));
exports.default = WebpayPlusModal;
