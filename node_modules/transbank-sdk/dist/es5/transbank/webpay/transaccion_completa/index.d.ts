import Options from '../../common/options';
import _Transaction from './transaction';
import _MallTransaction from './mall_transaction';
declare namespace TransaccionCompleta {
    /**
     * Contains methods used to create, commit, refund and capture Transactions.
     */
    const Transaction: typeof _Transaction;
    /**
     * Contains methods used to create, commit, refund and capture Mall Transactions.
     */
    const MallTransaction: typeof _MallTransaction;
    /**
     * Contains currently configured Commerce Code, Api Key and Environment
     */
    let options: Options;
    /**
       * @returns currently configured Commerce Code and Api Key
       */
    const getDefaultOptions: () => Options;
    /**
     * This methods configures the module to point to the Production Environment with the given params.
     * @param _commerceCode Commerce Code given by Transbank when contracting the product
     * @param _apiKey Api Key given by Transbank when you sucessfuly validate your integration
     */
    const configureForProduction: (_commerceCode: string, _apiKey: string) => void;
    /**
     * This methods configures the module to point to the Integration Environment with the given params.
     * You can check use the credentials provided in the official docs.
     * https://transbankdevelopers.cl/documentacion/como_empezar#codigos-de-comercio
     * @param _commerceCode Commerce Code given by Transbank.
     * @param _apiKey Api Key given by Transbank.
     */
    const configureForIntegration: (_commerceCode: string, _apiKey: string) => void;
    /**
     * This method configures the module to use Transaccion Completa in the Integration environment.
     */
    const configureForTesting: () => void;
    /**
     * This method configures the module to use Transaccion Completa Deferred in the Integration environment.
     */
    const configureForTestingDeferred: () => void;
    /**
     * This method configures the module to use Transaccion Completa Mall in the Integration environment.
     */
    const configureForTestingMall: () => void;
    /**
     * This method configures the module to use Transaccion Completa Mall Deferred in the Integration environment.
     */
    const configureForTestingMallDeferred: () => void;
    /**
     * This method configures the module to use Transaccion Completa without CVV in the Integration environment.
     */
    const configureForTestingNoCVV: () => void;
    /**
     * This method configures the module to use Transaccion Completa Deferred without CVV in the Integration environment.
     */
    const configureForTestingDeferredNoCVV: () => void;
    /**
     * This method configures the module to use Transaccion Completa Mall without CVV in the Integration environment.
     */
    const configureForTestingMallNoCVV: () => void;
    /**
     * This method configures the module to use Transaccion Completa Mall Deferred without CVV in the Integration environment.
     */
    const configureForTestingMallDeferredNoCVV: () => void;
}
export default TransaccionCompleta;
